{"ast":null,"code":"var _jsxFileName = \"/Users/rubendiaz/projects/hackaton/hack2-ionic-photogallery/src/components/GeolocationButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { IonButton, IonLoading, IonToast } from '@ionic/react';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GeolocationButton = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({\n    showError: false\n  });\n  const [position, setPosition] = useState();\n\n  const getLocation = async () => {\n    setLoading(true);\n\n    try {\n      const position = await Geolocation.getCurrentPosition();\n      setPosition(position);\n      setLoading(false);\n      setError({\n        showError: false\n      });\n    } catch (e) {\n      setError({\n        showError: true,\n        message: e.message\n      });\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IonLoading, {\n      isOpen: loading,\n      onDidDismiss: () => setLoading(false),\n      message: 'Getting Location...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IonToast, {\n      isOpen: error.showError,\n      onDidDismiss: () => setError({\n        message: \"\",\n        showError: false\n      }),\n      message: error.message,\n      duration: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n      color: \"primary\",\n      onClick: getLocation,\n      children: position ? `${position.coords.latitude} ${position.coords.longitude}` : \"Get Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GeolocationButton, \"9KzwXijV9nb6LHXFgYfw1XRzM+o=\");\n\n_c = GeolocationButton;\nexport default GeolocationButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeolocationButton\");","map":{"version":3,"sources":["/Users/rubendiaz/projects/hackaton/hack2-ionic-photogallery/src/components/GeolocationButton.tsx"],"names":["Geolocation","IonButton","IonLoading","IonToast","React","useState","GeolocationButton","loading","setLoading","error","setError","showError","position","setPosition","getLocation","getCurrentPosition","e","message","coords","latitude","longitude"],"mappings":";;;AAAA,SAASA,WAAT,QAAyC,2BAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,QAAhC,QAAgD,cAAhD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAOA,MAAMC,iBAA2B,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAgB;AAAEM,IAAAA,SAAS,EAAE;AAAb,GAAhB,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;;AAEA,QAAMS,WAAW,GAAG,YAAY;AAC5BN,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMI,QAAQ,GAAG,MAAMZ,WAAW,CAACe,kBAAZ,EAAvB;AACAF,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAR;AACH,KALD,CAKE,OAAOK,CAAP,EAAU;AACRN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,SAAS,EAAE,IAAb;AAAmBM,QAAAA,OAAO,EAAED,CAAC,CAACC;AAA9B,OAAD,CAAR;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAZD;;AAcA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,MAAM,EAAED,OADZ;AAEI,MAAA,YAAY,EAAE,MAAMC,UAAU,CAAC,KAAD,CAFlC;AAGI,MAAA,OAAO,EAAE;AAHb;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,QAAD;AACI,MAAA,MAAM,EAAEC,KAAK,CAACE,SADlB;AAEI,MAAA,YAAY,EAAE,MAAMD,QAAQ,CAAC;AAAEO,QAAAA,OAAO,EAAE,EAAX;AAAeN,QAAAA,SAAS,EAAE;AAA1B,OAAD,CAFhC;AAGI,MAAA,OAAO,EAAEF,KAAK,CAACQ,OAHnB;AAII,MAAA,QAAQ,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,YANJ,eAYI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAA2B,MAAA,OAAO,EAAEH,WAApC;AAAA,gBAAkDF,QAAQ,GAAI,GAAEA,QAAQ,CAACM,MAAT,CAAgBC,QAAS,IAAGP,QAAQ,CAACM,MAAT,CAAgBE,SAAU,EAA5D,GAAgE;AAA1H;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADJ;AAgBH,CAnCD;;GAAMd,iB;;KAAAA,iB;AAqCN,eAAeA,iBAAf","sourcesContent":["import { Geolocation, Geoposition } from '@ionic-native/geolocation';\nimport { IonButton, IonLoading, IonToast } from '@ionic/react';\nimport React, { useState } from 'react';\n\ninterface LocationError {\n    showError: boolean;\n    message?: string;\n}\n\nconst GeolocationButton: React.FC = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [error, setError] = useState<LocationError>({ showError: false });\n    const [position, setPosition] = useState<Geoposition>();\n\n    const getLocation = async () => {\n        setLoading(true);\n\n        try {\n            const position = await Geolocation.getCurrentPosition();\n            setPosition(position);\n            setLoading(false);\n            setError({ showError: false });\n        } catch (e) {\n            setError({ showError: true, message: e.message });\n            setLoading(false);\n        }\n    }\n\n    return (\n        <>\n            <IonLoading\n                isOpen={loading}\n                onDidDismiss={() => setLoading(false)}\n                message={'Getting Location...'}\n            />\n            <IonToast\n                isOpen={error.showError}\n                onDidDismiss={() => setError({ message: \"\", showError: false })}\n                message={error.message}\n                duration={3000}\n            />\n            <IonButton color=\"primary\" onClick={getLocation}>{position ? `${position.coords.latitude} ${position.coords.longitude}` : \"Get Location\"}</IonButton>\n        </>\n    );\n};\n\nexport default GeolocationButton;"]},"metadata":{},"sourceType":"module"}