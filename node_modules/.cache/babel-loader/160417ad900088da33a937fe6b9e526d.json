{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Geolocation } from '@capacitor/geolocation';\nconst PHOTO_STORAGE = \"photos\";\nexport function useGeoLocation() {\n  _s();\n\n  // useState \n  const [position, setPosition] = useState([]);\n  useEffect(() => {\n    const position = getCurrentPosition();\n    setPosition(position);\n  }, []);\n\n  const getCurrentPosition = async () => {\n    const position = await Geolocation.getCurrentPosition();\n    console.log('Current position:', position);\n    return position;\n  };\n\n  return {\n    position\n  };\n}\n\n_s(useGeoLocation, \"Vj60enM4ygyzTJmuqw0KYtvu3l0=\");","map":{"version":3,"sources":["/Users/rubendiaz/projects/hackaton/hack2-ionic-photogallery/src/hooks/useGeoLocation.ts"],"names":["useState","useEffect","Geolocation","PHOTO_STORAGE","useGeoLocation","position","setPosition","getCurrentPosition","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAMA,SAASC,WAAT,QAA4B,wBAA5B;AAGA,MAAMC,aAAa,GAAG,QAAtB;AAOA,OAAO,SAASC,cAAT,GAA0B;AAAA;;AAC/B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAM,EAAN,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,QAAQ,GAAGE,kBAAkB,EAAnC;AACAD,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAME,kBAAkB,GAAG,YAAY;AACrC,UAAMF,QAAQ,GAAG,MAAMH,WAAW,CAACK,kBAAZ,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,QAAjC;AACA,WAAOA,QAAP;AACD,GAJD;;AAMA,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD;;GAlBeD,c","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { isPlatform } from \"@ionic/react\";\nimport { Filesystem, Directory } from \"@capacitor/filesystem\"\nimport { Camera, CameraResultType, CameraSource, Photo } from '@capacitor/camera';\nimport { Storage } from '@capacitor/storage'\nimport { Capacitor } from '@capacitor/core';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { get } from \"https\";\n\nconst PHOTO_STORAGE = \"photos\";\n\nexport interface UserPhoto {\n  filepath: string;\n  webviewPath?: string;\n}\n\nexport function useGeoLocation() {\n  // useState \n  const [position, setPosition] = useState<any>([]);\n\n  useEffect(() => {\n    const position = getCurrentPosition()\n    setPosition(position)\n  }, []);\n\n  const getCurrentPosition = async () => {\n    const position = await Geolocation.getCurrentPosition();\n    console.log('Current position:', position);\n    return position\n  };\n\n  return {\n    position\n  };\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}