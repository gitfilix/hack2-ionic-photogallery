{"ast":null,"code":"var _jsxFileName = \"/Users/rubendiaz/projects/hackaton/hack2-ionic-photogallery/src/components/GeolocationButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Geolocation } from '@ionic-native/geolocation';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeolocationButton = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({\n    showError: false\n  });\n  const [position, setPosition] = useState();\n\n  const getLocation = async () => {\n    setLoading(true);\n\n    try {\n      const position = await Geolocation.getCurrentPosition();\n      setPosition(position);\n      setLoading(false);\n      setError({\n        showError: false\n      });\n    } catch (e) {\n      setError({\n        showError: true,\n        message: e.message\n      });\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GeolocationButton, \"9KzwXijV9nb6LHXFgYfw1XRzM+o=\");\n\n_c = GeolocationButton;\nexport default GeolocationButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeolocationButton\");","map":{"version":3,"sources":["/Users/rubendiaz/projects/hackaton/hack2-ionic-photogallery/src/components/GeolocationButton.tsx"],"names":["Geolocation","React","useState","GeolocationButton","loading","setLoading","error","setError","showError","position","setPosition","getLocation","getCurrentPosition","e","message"],"mappings":";;;AAAA,SAASA,WAAT,QAAyC,2BAAzC;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAOA,MAAMC,iBAA2B,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAgB;AAAEM,IAAAA,SAAS,EAAE;AAAb,GAAhB,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;;AAEA,QAAMS,WAAW,GAAG,YAAY;AAC5BN,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMI,QAAQ,GAAG,MAAMT,WAAW,CAACY,kBAAZ,EAAvB;AACAF,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAR;AACH,KALD,CAKE,OAAOK,CAAP,EAAU;AACRN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,SAAS,EAAE,IAAb;AAAmBM,QAAAA,OAAO,EAAED,CAAC,CAACC;AAA9B,OAAD,CAAR;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAZD;;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMF,iB;;KAAAA,iB;AA0BN,eAAeA,iBAAf","sourcesContent":["import { Geolocation, Geoposition } from '@ionic-native/geolocation';\nimport { IonButton, IonLoading, IonToast } from '@ionic/react';\nimport React, { useState } from 'react';\n\ninterface LocationError {\n    showError: boolean;\n    message?: string;\n}\n\nconst GeolocationButton: React.FC = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [error, setError] = useState<LocationError>({ showError: false });\n    const [position, setPosition] = useState<Geoposition>();\n\n    const getLocation = async () => {\n        setLoading(true);\n\n        try {\n            const position = await Geolocation.getCurrentPosition();\n            setPosition(position);\n            setLoading(false);\n            setError({ showError: false });\n        } catch (e) {\n            setError({ showError: true, message: e.message });\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div>\n          hola\n        </div>\n    );\n};\n\nexport default GeolocationButton;"]},"metadata":{},"sourceType":"module"}