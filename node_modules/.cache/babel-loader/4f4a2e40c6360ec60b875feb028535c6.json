{"ast":null,"code":"import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n  async getCurrentPosition(options) {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(pos => {\n        resolve(pos);\n      }, err => {\n        reject(err);\n      }, Object.assign({\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0\n      }, options));\n    });\n  }\n\n  async watchPosition(options, callback) {\n    const id = navigator.geolocation.watchPosition(pos => {\n      callback(pos);\n    }, err => {\n      callback(null, err);\n    }, Object.assign({\n      enableHighAccuracy: false,\n      timeout: 10000,\n      maximumAge: 0\n    }, options));\n    return `${id}`;\n  }\n\n  async clearWatch(options) {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n\n  async checkPermissions() {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation'\n    });\n    return {\n      location: permission.state\n    };\n  }\n\n  async requestPermissions() {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };","map":{"version":3,"sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,iBAA1B;AAWA,OAAM,MAAO,cAAP,SAA8B,SAA9B,CAAuC;AACnB,QAAlB,kBAAkB,CAAC,OAAD,EAA0B;AAChD,WAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAoB;AACrC,MAAA,SAAS,CAAC,WAAV,CAAsB,kBAAtB,CACE,GAAG,IAAG;AACJ,QAAA,OAAO,CAAC,GAAD,CAAP;AACD,OAHH,EAIE,GAAG,IAAG;AACJ,QAAA,MAAM,CAAC,GAAD,CAAN;AACD,OANH,EAMG,MAAA,CAAA,MAAA,CAAA;AAEC,QAAA,kBAAkB,EAAE,KAFrB;AAGC,QAAA,OAAO,EAAE,KAHV;AAIC,QAAA,UAAU,EAAE;AAJb,OAAA,EAKI,OALJ,CANH;AAcD,KAfM,CAAP;AAgBD;;AAEkB,QAAb,aAAa,CACjB,OADiB,EAEjB,QAFiB,EAEc;AAE/B,UAAM,EAAE,GAAG,SAAS,CAAC,WAAV,CAAsB,aAAtB,CACT,GAAG,IAAG;AACJ,MAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHQ,EAIT,GAAG,IAAG;AACJ,MAAA,QAAQ,CAAC,IAAD,EAAO,GAAP,CAAR;AACD,KANQ,EAMR,MAAA,CAAA,MAAA,CAAA;AAEC,MAAA,kBAAkB,EAAE,KAFrB;AAGC,MAAA,OAAO,EAAE,KAHV;AAIC,MAAA,UAAU,EAAE;AAJb,KAAA,EAKI,OALJ,CANQ,CAAX;AAeA,WAAO,GAAG,EAAE,EAAZ;AACD;;AAEe,QAAV,UAAU,CAAC,OAAD,EAAwB;AACtC,IAAA,MAAM,CAAC,SAAP,CAAiB,WAAjB,CAA6B,UAA7B,CAAwC,QAAQ,CAAC,OAAO,CAAC,EAAT,EAAa,EAAb,CAAhD;AACD;;AAEqB,QAAhB,gBAAgB,GAAA;AACpB,QAAI,OAAO,SAAP,KAAqB,WAArB,IAAoC,CAAC,SAAS,CAAC,WAAnD,EAAgE;AAC9D,YAAM,KAAK,WAAL,CAAiB,+CAAjB,CAAN;AACD;;AAED,UAAM,UAAU,GAAG,MAAM,MAAM,CAAC,SAAP,CAAiB,WAAjB,CAA6B,KAA7B,CAAmC;AAC1D,MAAA,IAAI,EAAE;AADoD,KAAnC,CAAzB;AAGA,WAAO;AAAE,MAAA,QAAQ,EAAE,UAAU,CAAC;AAAvB,KAAP;AACD;;AAEuB,QAAlB,kBAAkB,GAAA;AACtB,UAAM,KAAK,aAAL,CAAmB,yBAAnB,CAAN;AACD;;AA3D0C;AA8D7C,MAAM,WAAW,GAAG,IAAI,cAAJ,EAApB;AAEA,SAAS,WAAT","sourceRoot":"","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n    async getCurrentPosition(options) {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(pos => {\n                resolve(pos);\n            }, err => {\n                reject(err);\n            }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        });\n    }\n    async watchPosition(options, callback) {\n        const id = navigator.geolocation.watchPosition(pos => {\n            callback(pos);\n        }, err => {\n            callback(null, err);\n        }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        return `${id}`;\n    }\n    async clearWatch(options) {\n        window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        const permission = await window.navigator.permissions.query({\n            name: 'geolocation',\n        });\n        return { location: permission.state };\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };\n//# sourceMappingURL=web.js.map"]},"metadata":{},"sourceType":"module"}