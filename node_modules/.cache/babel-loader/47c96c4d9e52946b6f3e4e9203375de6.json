{"ast":null,"code":"var _jsxFileName = \"/Users/rubendiaz/projects/hackaton/hack2-ionic-photogallery/src/components/GeolocationButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Geolocation } from '@ionic-native/geolocation';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeolocationButton = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({\n    showError: false\n  }); // const [position, setPosition] = useState<Geoposition>();\n\n  const getLocation = async () => {\n    setLoading(true);\n\n    try {\n      const position = await Geolocation.getCurrentPosition(); // setPosition(position);\n\n      setLoading(false);\n      setError({\n        showError: false\n      });\n    } catch (e) {\n      setError({\n        showError: true,\n        message: e.message\n      });\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GeolocationButton, \"ekZB3dUn2wGKTyIDLK5E9GVMf/8=\");\n\n_c = GeolocationButton;\nexport default GeolocationButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeolocationButton\");","map":{"version":3,"sources":["/Users/rubendiaz/projects/hackaton/hack2-ionic-photogallery/src/components/GeolocationButton.tsx"],"names":["Geolocation","React","useState","GeolocationButton","loading","setLoading","error","setError","showError","getLocation","position","getCurrentPosition","e","message"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAOA,MAAMC,iBAA2B,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAgB;AAAEM,IAAAA,SAAS,EAAE;AAAb,GAAhB,CAAlC,CAFsC,CAGtC;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC9BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMK,QAAQ,GAAG,MAAMV,WAAW,CAACW,kBAAZ,EAAvB,CADA,CAEA;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAR;AACH,KALD,CAKE,OAAOI,CAAP,EAAU;AACRL,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,SAAS,EAAE,IAAb;AAAmBK,QAAAA,OAAO,EAAED,CAAC,CAACC;AAA9B,OAAD,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACF,GAZD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CAxBD;;GAAMF,iB;;KAAAA,iB;AA0BN,eAAeA,iBAAf","sourcesContent":["import { Geolocation } from '@ionic-native/geolocation';\nimport { IonButton, IonLoading, IonToast } from '@ionic/react';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport React, { useState } from 'react';\n\ninterface LocationError {\n    showError: boolean;\n    message?: string;\n}\n\nconst GeolocationButton: React.FC = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [error, setError] = useState<LocationError>({ showError: false });\n    // const [position, setPosition] = useState<Geoposition>();\n\n    const getLocation = async () => {\n      setLoading(true);\n\n      try {\n          const position = await Geolocation.getCurrentPosition();\n          // setPosition(position);\n          setLoading(false);\n          setError({ showError: false });\n      } catch (e) {\n          setError({ showError: true, message: e.message });\n          setLoading(false);\n      }\n    }\n\n    return (\n      <div>\n        hola\n      </div>\n    );\n};\n\nexport default GeolocationButton;"]},"metadata":{},"sourceType":"module"}